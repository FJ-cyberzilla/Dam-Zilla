name: 🚀 Multi-Language CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: 🧪 Test Suite
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: 🐍 Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: 🔬 Setup Julia
        uses: julia-actions/setup-julia@v1
        with:
          version: '1.9'

      - name: 📦 Install JavaScript dependencies
        run: npm ci

      - name: 📦 Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: 📦 Install Julia dependencies
        run: |
          julia -e 'using Pkg; Pkg.activate("."); Pkg.instantiate()'

      - name: 🧪 Run JavaScript tests
        run: npm test

      - name: 🧪 Run TypeScript tests
        run: |
          if [ -f tsconfig.json ]; then
            npx tsc --noEmit
            npm run test:typescript || true
          fi

      - name: 🧪 Run Python tests
        run: |
          if [ -f pytest.ini ] || [ -f requirements.txt ]; then
            python -m pytest tests/ || true
          fi

      - name: 🔬 Run Julia tests
        run: |
          if [ -f Project.toml ]; then
            julia -e 'using Pkg; Pkg.test()'
          fi

      - name: 🐚 Run Shell scripts syntax check
        run: |
          find . -name "*.sh" -type f | while read file; do
            shellcheck "$file" || true
          done

  lint:
    name: 📏 Lint & Format
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 📏 ESLint (JavaScript/TypeScript)
        run: |
          npx eslint . --ext .js,.jsx,.ts,.tsx --max-warnings=0

      - name: 💅 Prettier check
        run: npx prettier --check .

      - name: 🐍 Python lint
        run: |
          pip install pylint black
          find . -name "*.py" -type f | while read file; do
            black --check "$file" || true
            pylint "$file" || true
          done

      - name: 🔬 Julia format check
        run: |
          julia -e 'using Pkg; Pkg.add("JuliaFormatter"); using JuliaFormatter; format(".")'

  build:
    name: 🏗️ Build & Package
    runs-on: ubuntu-latest
    needs: [test, lint]
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🏗️ Build JavaScript/TypeScript
        run: |
          if [ -f package.json ]; then
            npm run build || true
          fi

      - name: 📦 Create distribution
        run: |
          mkdir -p dist
          # Copy built files
          [ -d build ] && cp -r build/* dist/ || true
          [ -d dist ] && cp -r dist/* ./ || true

      - name: 📤 Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: |
            dist/
            build/
          retention-days: 7
