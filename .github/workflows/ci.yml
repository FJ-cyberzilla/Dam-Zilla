name: Multi-Language CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.11]
        node-version: [20.x]
        julia-version: ['1.10.0']

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # --- Setup Node.js (JavaScript + TypeScript + CSS) ---
      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Node.js dependencies
        run: |
          npm install

      - name: Run JavaScript/TypeScript lint
        run: |
          if [ -f .eslintrc.js ] || [ -f .eslintrc.json ]; then npx eslint .; fi

      - name: Run JavaScript/TypeScript tests
        run: |
          if [ -f jest.config.js ] || [ -f jest.config.ts ]; then npx jest; fi

      # --- Setup Python ---
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Python dependencies
        run: |
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run Python tests
        run: |
          if [ -f tests/test_*.py ]; then python -m unittest discover -s tests; fi

      # --- Setup Julia ---
      - name: Set up Julia ${{ matrix.julia-version }}
        uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.julia-version }}

      - name: Install Julia packages
        run: |
          julia -e 'using Pkg; Pkg.instantiate(); Pkg.precompile()'

      - name: Run Julia tests
        run: |
          if [ -f runtests.jl ]; then julia runtests.jl; fi

      # --- Shell Scripts ---
      - name: Run Shell scripts (if test.sh exists)
        run: |
          if [ -f test.sh ]; then chmod +x test.sh && ./test.sh; fi

      # --- CSS Validation (Optional) ---
      - name: Validate CSS (if stylelint config exists)
        run: |
          if [ -f .stylelintrc ] || [ -f .stylelintrc.json ]; then npx stylelint "**/*.css"; fi
